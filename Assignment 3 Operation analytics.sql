-- CREATING THE DATABASE AND TABLES
CREATE DATABASE JOB_DATA;
USE JOB_DATA;
CREATE TABLE JD ( 
 DS TEXT(255), 
 JOB_ID INT,
 ACTOR_ID INT,
 EVENT VARCHAR(255),
 LANGUAGE CHAR (255),
 TIME_SPENT INT,
 ORG TEXT (1));
 
-- INSERTING VALUES INTO TABLES 
INSERT INTO JD (DS,JOB_ID,ACTOR_ID,EVENT,LANGUAGE,TIME_SPENT,ORG)
VALUES ("2020/11/30","21","1001","SKIP","ENGLISH","15","A"),
       ("2020/11/30","22","1006","TRANSFER","ARABIC","25","B"),
       ("2020/11/29","23","1003","DECISION","PERSIAN","20","C"),
       ("2020/11/28","23","1005","TRANSFER","PERSIAN","22","D"),
       ("2020/11/28","25","1002","DECISION","HINDI","11","B"),
       ("2020/11/27","11","1007","DECISION","FRENCH","104","D"),
       ("2020/11/26","23","1004","SKIP","PERSIAN","56","A"),
       ("2020/11/25","20","1003","TRANSFER","ITALIAN","45","C");
      
-- JOBS REVIEWED OVER TIME
-- FOR NON-DISTINCT RECORD DATA 
SELECT COUNT(JOB_ID)/(30*24) AS JOBS_REVIEWED_PER_HOUR_NON_DISTINCT
FROM JD;
-- FOR UNIQUE RECORD DATA 
SELECT COUNT(DISTINCT JOB_ID)/(30*24) AS JOBS_REVIEWED_PER_HOUR_UNIQUE
FROM JD;

-- THROUGHPUT ANALYSIS 
WITH DATA AS (SELECT DS AS DATES,COUNT(DISTINCT JOB_ID) AS JOB_ID
FROM JD 
GROUP BY DS)
SELECT DATES, JOB_ID, AVG(JOB_ID) 
OVER (ORDER BY DATES ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS 7DAYROLLING_AVERAGE_DISTINCT
FROM DATA;

-- LANGUAGE ANALYSIS
-- AS IN THIS TASK PERCENTAGE OF EACH LANGUAGE WAS SAID TO BE CALCULATED SO IT DOES NOT SEEMS TO BE NECESSARY TO DO IT WITH DISTINCT FUNCTION FOR LANGUAGE COLUMN
SELECT JOB_ID,LANGUAGE,
COUNT(LANGUAGE) AS TOTAL,
((COUNT(LANGUAGE)/(SELECT COUNT(*) FROM jd))*100) AS PERCENTAGE
FROM JD
GROUP BY JOB_ID,LANGUAGE
ORDER BY TOTAL;

-- DUPLICATE ROW DETECTION 	
SELECT * 
FROM ( SELECT *, ROW_NUMBER () OVER (PARTITION BY (JOB_ID)) AS D
FROM JD )AS A 
WHERE D > 1

-- 