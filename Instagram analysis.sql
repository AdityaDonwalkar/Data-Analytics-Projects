-- LOYAL USER REWARD
-- 5 OLDEST USERS ON INSTAGRAM 
SELECT *
FROM USERS
ORDER BY CREATED_AT ASC
LIMIT 5;

-- INACTIVE USER ENGAGEMENT 
-- USERS WHO HAVE NEVER POSTED A SINGLE PHOTO ON INSTAGRAM
SELECT A.ID,USERNAME,IMAGE_URL
FROM USERS A 
LEFT JOIN PHOTOS B
ON A.ID = B.USER_ID
WHERE IMAGE_URL IS NULL;

-- CONTEST WINNER DECLARATION
-- WINNER OF THE CONTEST
SELECT U.ID,U.USERNAME,P.IMAGE_URL, COUNT(*) 
FROM LIKES 
JOIN PHOTOS P
ON P.ID=LIKES.PHOTO_ID
JOIN USERS U
ON U.ID= LIKES.PHOTO_ID
GROUP BY U.ID
ORDER BY COUNT(*)DESC
LIMIT 5;

-- HASTAG RESEARCH
-- MOST POPULAR HASTAGS 
SELECT P.TAG_ID, TAG_NAME, COUNT(*) AS TOTAL
FROM TAGS T
JOIN PHOTO_TAGS P
ON P.TAG_ID = T.ID
GROUP BY P.TAG_ID
ORDER BY TOTAL DESC
LIMIT 5;

-- AD CAMPAIGN LAUNCH
-- BEST DAY OF THE WEEK TO LAUNCH ADS
SELECT DAYNAME(CREATED_AT) AS DAYS,COUNT(*) AS TOTAL
FROM USERS
GROUP BY DAYS
ORDER BY TOTAL DESC;

-- USER ENGAGEMENT
-- ACTIVE USERS ON INSTAGRAM
SELECT (SELECT COUNT(*)FROM photos)/
(SELECT COUNT(*) FROM USERS) AS 'AVERAGE NO OF POSTS PER USERS';

-- BOTS & FAKE ACCOUNTS
-- IDENTIFY FAKE ACCOUNTS
SELECT USERS.ID,USERS.USERNAME, COUNT(*)
FROM USERS
JOIN LIKES 
ON LIKES.USER_ID=USERS.ID
GROUP BY USERS.ID
ORDER BY COUNT(*) DESC
LIMIT 20;
